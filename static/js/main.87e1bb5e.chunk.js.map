{"version":3,"sources":["components/Button/Button.jsx","components/Input/Input.jsx","components/Select/Select.jsx","components/Textarea/Textarea.jsx","components/Form.jsx","components/Wave/Wave.jsx","App.jsx","index.js"],"names":["classNames","require","Button","hasErrors","type","className","disabled","Input","isFilled","error","inputName","labelName","changeHandler","blurHandler","value","filled","name","onChange","onBlur","e","target","Select","Textarea","cols","rows","Form","initialInputs","initialErrors","useState","inputs","setInput","setFilled","errors","setError","invalidValue","event","fieldName","setErrorText","text","match","includes","length","resetState","Object","values","some","onSubmit","preventDefault","console","log","fullName","email","message","Wave","initialUser","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87e1bb5e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nexport const Button = ({ hasErrors }) => (\n  <button\n    type=\"submit\"\n    className={classNames({\n      disabled: hasErrors,\n    })}\n  >\n    Send\n  </button>\n);\n\nButton.propTypes = {\n  hasErrors: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nexport const Input = ({\n  isFilled,\n  error,\n  inputName,\n  labelName,\n  changeHandler,\n  blurHandler,\n  value,\n}) => (\n  <div className=\"group\">\n    <input\n      className={classNames({\n        filled: isFilled,\n        error: error && error !== 'start',\n      })}\n      type=\"text\"\n      name={inputName}\n      onChange={changeHandler}\n      onBlur={(e) => {\n        blurHandler(e.target.name);\n      }}\n      value={value}\n    />\n    <label\n      className={classNames({\n        filled: isFilled,\n        error: error && error !== 'start',\n      })}\n    >\n      {labelName}\n    </label>\n    {error && error !== 'start' && (\n      <div>\n        <p className=\"error-message\">{error}</p>\n      </div>\n    )}\n  </div>\n);\n\nInput.propTypes = {\n  isFilled: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  labelName: PropTypes.string.isRequired,\n  changeHandler: PropTypes.func.isRequired,\n  blurHandler: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nexport const Select = () => (\n  <select>\n    <option>Business</option>\n    <option>Marketing</option>\n    <option>Tech</option>\n  </select>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nexport const Textarea = ({\n  isFilled,\n  error,\n  inputName,\n  labelName,\n  changeHandler,\n  blurHandler,\n  value,\n}) => (\n  <div className=\"group\">\n    <textarea\n      className={classNames({\n        filled: isFilled,\n        error: error && error !== 'start',\n      })}\n      type=\"text\"\n      cols=\"30\"\n      rows=\"30\"\n      name={inputName}\n      onChange={changeHandler}\n      onBlur={(e) => {\n        blurHandler(e.target.name);\n      }}\n      value={value}\n    />\n    <label\n      className={classNames({\n        filled: isFilled,\n        error: error && error !== 'start',\n      })}\n    >\n      {labelName}\n    </label>\n    {error && error !== 'start' && (\n      <div>\n        <p className=\"error-message\">{error}</p>\n      </div>\n    )}\n  </div>\n);\n\nTextarea.propTypes = {\n  isFilled: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  labelName: PropTypes.string.isRequired,\n  changeHandler: PropTypes.func.isRequired,\n  blurHandler: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './Button';\nimport { Input } from './Input';\nimport { Select } from './Select';\nimport { Textarea } from './Textarea';\n\nexport const Form = ({ initialInputs, initialErrors }) => {\n  const [inputs, setInput] = useState(initialInputs);\n  const [filled, setFilled] = useState(initialInputs);\n  const [errors, setError] = useState(initialErrors);\n\n  const emptyError = 'This field should not be empty';\n  const invalidValue = 'Error, please enter a valid value';\n\n  const onChange = (event) => {\n    const { name, value } = event.target;\n\n    setInput({\n      ...inputs,\n      [name]: value,\n    });\n\n    setError({\n      ...errors,\n      [name]: '',\n    });\n  };\n\n  const onBlur = (fieldName) => {\n    const inputValue = inputs[fieldName];\n    const setErrorText = text => (\n      setError({\n        ...errors,\n        [fieldName]: text,\n      })\n    );\n\n    if (!inputValue) {\n      setErrorText(emptyError);\n\n      return;\n    }\n\n    if (fieldName === 'fullName' && inputs[fieldName].match(/[^A-Z]/i)) {\n      setErrorText(invalidValue);\n    } else if (fieldName === 'email' && !inputs[fieldName].includes('@')) {\n      setErrorText(invalidValue);\n    } else if (fieldName === 'message' && inputs[fieldName].length < 50) {\n      setErrorText(invalidValue);\n    } else {\n      setErrorText('');\n      setFilled({\n        ...filled,\n        [fieldName]: true,\n      });\n    }\n  };\n\n  const handlerSubmit = (event) => {\n    event.preventDefault();\n\n    const hasError = Object.values(errors).some(error => !!error);\n\n    if (hasError) {\n      return;\n    }\n\n    console.log(inputs);\n    resetState();\n  };\n\n  const resetState = () => {\n    setInput(initialInputs);\n    setError(initialErrors);\n    setFilled(initialInputs);\n  };\n\n  const hasErrors = Object.values(errors).some(error => !!error);\n\n  return (\n    <form\n      className=\"form form-group\"\n      onSubmit={handlerSubmit}\n    >\n      <Select />\n      <Input\n        isFilled={!!filled.fullName}\n        error={errors.fullName}\n        inputName=\"fullName\"\n        labelName=\"Full Name\"\n        changeHandler={onChange}\n        blurHandler={onBlur}\n        value={inputs.fullName}\n      />\n      <Input\n        isFilled={!!filled.email}\n        error={errors.email}\n        inputName=\"email\"\n        labelName=\"E-mail\"\n        changeHandler={onChange}\n        blurHandler={onBlur}\n        value={inputs.email}\n      />\n      <Textarea\n        isFilled={!!filled.message}\n        error={errors.message}\n        inputName=\"message\"\n        labelName=\"Message\"\n        changeHandler={onChange}\n        blurHandler={onBlur}\n        value={inputs.message}\n      />\n      <Button hasErrors={hasErrors} />\n    </form>\n  );\n};\n\nForm.propTypes = {\n  initialInputs: PropTypes.objectOf(PropTypes.string).isRequired,\n  initialErrors: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\n\nexport const Wave = () => (\n  <div className=\"wave\">\n    <div className=\"wave__wrapper wave__animation\">\n      <div className=\"wave__wrapperInner bgTop\">\n        <div className=\"wave__item wave__top\" />\n      </div>\n      <div className=\"wave__wrapperInner bgMiddle\">\n        <div className=\"wave__item wave__middle\" />\n      </div>\n      <div className=\"wave__wrapperInner bgBottom\">\n        <div className=\"wave__item wave__bottom\" />\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport { Form } from './components/Form';\nimport { Wave } from './components/Wave';\n\nexport const initialUser = {\n  fullName: '',\n  email: '',\n  message: '',\n};\n\nexport const initialErrors = {\n  fullName: 'start',\n  email: 'start',\n  message: 'start',\n};\n\nexport const App = () => (\n  <div>\n    <Wave />\n    <Form initialInputs={initialUser} initialErrors={initialErrors} />\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}